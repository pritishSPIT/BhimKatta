{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport format from 'date-fns/format';\nimport { AuthContext } from '../../../../store/auth';\nimport { FetchContext } from '../../../../store/fetch';\nimport styles from './comment-item.module.css';\n\nvar CommentItem = function CommentItem(_ref) {\n  var _authState$userInfo;\n\n  var author = _ref.author,\n      created = _ref.created,\n      isOwner = _ref.isOwner,\n      answerId = _ref.answerId,\n      questionId = _ref.questionId,\n      commentId = _ref.commentId,\n      setQuestion = _ref.setQuestion,\n      children = _ref.children;\n\n  var _useContext = useContext(AuthContext),\n      authState = _useContext.authState,\n      isAdmin = _useContext.isAdmin;\n\n  var _useContext2 = useContext(FetchContext),\n      authAxios = _useContext2.authAxios;\n\n  var handleDeleteComment = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res, _yield$authAxios$dele, data;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              res = window.confirm('Are you sure delete your comment?');\n\n              if (!res) {\n                _context.next = 7;\n                break;\n              }\n\n              _context.next = 4;\n              return authAxios[\"delete\"](answerId ? \"/comment/\".concat(questionId, \"/\").concat(answerId, \"/\").concat(commentId) : \"/comment/\".concat(questionId, \"/\").concat(commentId));\n\n            case 4:\n              _yield$authAxios$dele = _context.sent;\n              data = _yield$authAxios$dele.data;\n              setQuestion(data);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleDeleteComment() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: styles.commentContainer\n  }, __jsx(\"p\", null, children, \" \\u2013\"), \" \\xA0\", __jsx(Link, {\n    href: \"/users/[user]\",\n    as: \"/users/\".concat(author)\n  }, __jsx(\"a\", {\n    className: isOwner ? styles.owner : undefined\n  }, author)), \"\\xA0\", __jsx(\"p\", {\n    className: styles.dateText\n  }, format(new Date(created), \"MMM dd'`'yy 'at' k':'mm\"), ' '), (((_authState$userInfo = authState.userInfo) === null || _authState$userInfo === void 0 ? void 0 : _authState$userInfo.username) === author || isAdmin()) && __jsx(\"a\", {\n    className: styles[\"delete\"],\n    onClick: function onClick() {\n      return handleDeleteComment();\n    }\n  }, \"delete\"));\n};\n\nexport default CommentItem;","map":null,"metadata":{},"sourceType":"module"}