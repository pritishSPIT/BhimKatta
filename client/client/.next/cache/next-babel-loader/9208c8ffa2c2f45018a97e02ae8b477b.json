{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport cn from 'classnames';\nimport styles from './textarea.module.css';\n\nconst TextArea = (_ref) => {\n  let {\n    label,\n    inputInfo,\n    hasError,\n    errorMessage,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"label\", \"inputInfo\", \"hasError\", \"errorMessage\", \"className\"]);\n\n  return __jsx(\"div\", {\n    className: styles.container\n  }, label && __jsx(\"label\", {\n    className: styles.label\n  }, label), inputInfo && __jsx(\"p\", {\n    className: styles.inputInfo\n  }, inputInfo), __jsx(\"textarea\", _extends({\n    className: cn(styles.textarea, className, hasError && styles.hasError)\n  }, props)), hasError && __jsx(\"p\", {\n    className: styles.errorMessage\n  }, errorMessage));\n};\n\nexport default TextArea;","map":null,"metadata":{},"sourceType":"module"}