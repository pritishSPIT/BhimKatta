{"ast":null,"code":"import { useState, useEffect, useRef } from 'react';\n\nfunction useComponentVisible(initialIsVisible) {\n  const {\n    0: isComponentVisible,\n    1: setIsComponentVisible\n  } = useState(initialIsVisible);\n  const ref = useRef(null);\n  const toggleRef = useRef(null);\n\n  const handleHide = event => {\n    if (event.key === 'Escape') {\n      setIsComponentVisible(false);\n    }\n  };\n\n  const handleClickOutside = event => {\n    var _toggleRef$current;\n\n    if (ref.current && !ref.current.contains(event.target) && !(toggleRef === null || toggleRef === void 0 ? void 0 : (_toggleRef$current = toggleRef.current) === null || _toggleRef$current === void 0 ? void 0 : _toggleRef$current.contains(event.target))) {\n      setIsComponentVisible(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true);\n    document.addEventListener('keydown', handleHide, true);\n    return () => {\n      document.removeEventListener('keydown', handleHide, true);\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  });\n  return {\n    ref,\n    toggleRef,\n    isComponentVisible,\n    setIsComponentVisible\n  };\n}\n\nexport default useComponentVisible;","map":null,"metadata":{},"sourceType":"module"}