{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { publicFetch } from '../../util/fetcher';\nimport Layout from '../../components/layout';\nimport PageTitle from '../../components/page-title';\nimport SearchInput from '../../components/search-input';\nimport UserList from '../../components/user-list';\nimport UserItem from '../../components/user-list/user-item';\nimport { Spinner } from '../../components/icons';\n\nfunction UsersPage() {\n  const {\n    0: searchTerm,\n    1: setSearchTerm\n  } = useState(null);\n  const {\n    0: users,\n    1: setUsers\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  useEffect(() => {\n    if (searchTerm === null) {\n      const fetchUser = async () => {\n        const {\n          data\n        } = await publicFetch.get('/users');\n        setUsers(data);\n      };\n\n      fetchUser();\n    } else {\n      const delayDebounceFn = setTimeout(async () => {\n        setLoading(true);\n        const {\n          data\n        } = await publicFetch.get(searchTerm ? `/users/${searchTerm}` : `/users`);\n        setUsers(data);\n        setLoading(false);\n      }, 500);\n      return () => clearTimeout(delayDebounceFn);\n    }\n  }, [searchTerm]);\n  return __jsx(Layout, {\n    extra: false\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Users - BhimKatta\")), __jsx(PageTitle, {\n    title: \"Users\",\n    borderBottom: false\n  }), __jsx(SearchInput, {\n    placeholder: \"Search by user\",\n    isLoading: loading,\n    autoFocus: true,\n    autoComplete: \"off\",\n    type: \"text\",\n    onChange: e => setSearchTerm(e.target.value)\n  }), !users && __jsx(\"div\", {\n    className: \"loading\"\n  }, __jsx(Spinner, null)), users && __jsx(React.Fragment, null, __jsx(UserList, null, users === null || users === void 0 ? void 0 : users.map(({\n    username,\n    profilePhoto,\n    created,\n    id\n  }) => __jsx(UserItem, {\n    key: id,\n    username: username,\n    profilePhoto: profilePhoto,\n    created: created\n  }))), users.length == 0 && __jsx(\"p\", {\n    className: \"not-found\"\n  }, \"No users matched your search.\")));\n}\n\nexport default UsersPage;","map":null,"metadata":{},"sourceType":"module"}