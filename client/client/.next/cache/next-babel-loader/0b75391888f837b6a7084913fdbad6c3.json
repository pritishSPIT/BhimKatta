{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { publicFetch } from '../../util/fetcher';\nimport Layout from '../../components/layout';\nimport UserCard from '../../components/user-card';\nimport AvatarCard from '../../components/user-card/avatar-card';\nimport PostList from '../../components/user-card/post-list';\nimport PostItem from '../../components/user-card/post-list/post-item';\nimport { Spinner } from '../../components/icons';\n\nvar UserDetail = function UserDetail(_ref) {\n  var username = _ref.username;\n\n  var _useState = useState(null),\n      posts = _useState[0],\n      setPosts = _useState[1];\n\n  var _useState2 = useState('Questions'),\n      postType = _useState2[0],\n      setPostType = _useState2[1];\n\n  useEffect(function () {\n    var fetchQuestions = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _yield$publicFetch$ge, data;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return publicFetch.get(\"/question/user/\".concat(username));\n\n              case 2:\n                _yield$publicFetch$ge = _context.sent;\n                data = _yield$publicFetch$ge.data;\n                setPosts(data);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchQuestions() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchQuestions();\n  }, [postType, username]);\n  return __jsx(Layout, {\n    extra: false\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Users \", username, \" - BhimKatta\")), __jsx(UserCard, null, __jsx(AvatarCard, {\n    username: username\n  }), __jsx(PostList, {\n    postType: postType,\n    setPostType: setPostType\n  }, !posts && __jsx(\"div\", {\n    className: \"loading\"\n  }, __jsx(Spinner, null)), posts === null || posts === void 0 ? void 0 : posts.map(function (_ref3) {\n    var id = _ref3.id,\n        title = _ref3.title,\n        score = _ref3.score,\n        created = _ref3.created;\n    return __jsx(PostItem, {\n      key: id,\n      title: title,\n      vote: score,\n      created: created,\n      id: id\n    });\n  }), (posts === null || posts === void 0 ? void 0 : posts.length) == 0 && __jsx(\"p\", {\n    className: \"not-found-questions\"\n  }, \"Don't have any questions yet.\"))));\n};\n\nexport var __N_SSP = true;\nexport default UserDetail;","map":null,"metadata":{},"sourceType":"module"}