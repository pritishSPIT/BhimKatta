{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport useComponentVisible from '../hooks/useComponentVisible';\nimport ModalContext from '../store/modal';\nimport { AuthProvider } from '../store/auth';\nimport { FetchProvider } from '../store/fetch';\nimport { TagProvider } from '../store/tag';\nimport Modal from '../components/modal';\nimport AuthForms from '../components/auth-forms';\nimport '../styles/variables.css';\nimport '../styles/nprogress.css';\nimport 'react-tagsinput/react-tagsinput.css';\nimport '../styles/app.css';\nRouter.events.on('routeChangeStart', () => NProgress.start());\nRouter.events.on('routeChangeComplete', () => NProgress.done());\nRouter.events.on('routeChangeError', () => NProgress.done());\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  const {\n    ref,\n    isComponentVisible,\n    setIsComponentVisible\n  } = useComponentVisible(false);\n  const {\n    0: authScreen,\n    1: setAuthScreen\n  } = useState(null);\n\n  const handleComponentVisible = (componentVisible, authScreen) => {\n    setIsComponentVisible(componentVisible);\n    setAuthScreen(authScreen);\n  };\n\n  return __jsx(ModalContext.Provider, {\n    value: {\n      ref,\n      handleComponentVisible,\n      setIsComponentVisible\n    }\n  }, __jsx(AuthProvider, null, __jsx(FetchProvider, null, __jsx(TagProvider, null, __jsx(Component, pageProps), isComponentVisible && __jsx(Modal, null, __jsx(AuthForms, {\n    screen: authScreen\n  }))))));\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}