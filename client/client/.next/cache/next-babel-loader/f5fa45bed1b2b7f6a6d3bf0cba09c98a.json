{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useEffect, useRef } from 'react';\nimport cn from 'classnames';\nimport { Search } from '../icons';\nimport styles from './search-input.module.css';\n\nconst SearchInput = (_ref) => {\n  let {\n    fullWidth,\n    autoFocus,\n    marginLeft = true,\n    isLoading = false,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"fullWidth\", \"autoFocus\", \"marginLeft\", \"isLoading\", \"className\"]);\n\n  const ref = useRef(null);\n  useEffect(() => {\n    if (autoFocus) {\n      ref.current.focus();\n    }\n  }, [ref]);\n  return __jsx(\"div\", {\n    className: cn(styles.container, fullWidth && styles.fullWidth, marginLeft && styles.ml24, isLoading && styles.isLoading)\n  }, __jsx(\"input\", _extends({\n    ref: ref,\n    className: cn(styles.input, isLoading && styles.paddingRight, className)\n  }, props)), __jsx(Search, {\n    className: styles.search\n  }));\n};\n\nexport default SearchInput;","map":null,"metadata":{},"sourceType":"module"}