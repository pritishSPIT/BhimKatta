{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useContext } from 'react';\nimport { AuthContext } from '../../../store/auth';\nimport ModalContext from '../../../store/modal';\nimport AddComment from '../add-comment';\nimport styles from './comment-list.module.css';\n\nconst CommentList = ({\n  children,\n  questionId,\n  answerId,\n  setQuestion\n}) => {\n  const {\n    isAuthenticated\n  } = useContext(AuthContext);\n  const {\n    handleComponentVisible\n  } = useContext(ModalContext);\n  const {\n    0: showAddComment,\n    1: setShowAddComment\n  } = useState(false);\n  const {\n    0: visibleComments,\n    1: setVisibleComments\n  } = useState(children.slice(0, 3));\n  const {\n    0: difference,\n    1: setDiffrence\n  } = useState(null);\n  useEffect(() => {\n    setVisibleComments(children.slice(0, 3));\n  }, [children]);\n  useEffect(() => {\n    setDiffrence(children.length - visibleComments.length);\n  }, [visibleComments]);\n  return __jsx(\"div\", {\n    className: styles.commentCell\n  }, visibleComments, difference > 0 ? __jsx(\"a\", {\n    className: styles.showMore,\n    onClick: () => setVisibleComments(children)\n  }, \"show \", __jsx(\"b\", null, difference), \" more comments\") : !showAddComment && __jsx(\"a\", {\n    className: styles.addComment,\n    onClick: () => isAuthenticated() ? setShowAddComment(true) : handleComponentVisible(true, 'signup')\n  }, \"add comment\"), showAddComment && __jsx(AddComment, {\n    questionId: questionId,\n    answerId: answerId,\n    setShowAddComment: setShowAddComment,\n    setQuestion: setQuestion\n  }));\n};\n\nexport default CommentList;","map":null,"metadata":{},"sourceType":"module"}