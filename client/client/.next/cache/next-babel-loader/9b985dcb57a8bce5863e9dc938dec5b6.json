{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport formatDistanceToNowStrict from 'date-fns/formatDistanceToNowStrict';\nimport { AuthContext } from '../../../store/auth';\nimport { FetchContext } from '../../../store/fetch';\nimport Tag from '../../tag';\nimport styles from './post-summary.module.css';\n\nconst PostSummary = ({\n  tags,\n  author,\n  created,\n  questionId,\n  answerId,\n  setQuestion,\n  children\n}) => {\n  var _authState$userInfo;\n\n  const {\n    authState,\n    isAdmin\n  } = useContext(AuthContext);\n  const {\n    authAxios\n  } = useContext(FetchContext);\n  const router = useRouter();\n\n  const handleDeleteComment = async () => {\n    const res = window.confirm('Are you sure delete your post?');\n\n    if (res) {\n      const {\n        data\n      } = await authAxios.delete(answerId ? `/answer/${questionId}/${answerId}` : `/question/${questionId}`);\n\n      if (answerId) {\n        setQuestion(data);\n      } else {\n        router.push('/');\n      }\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.postCell\n  }, __jsx(\"div\", {\n    className: styles.text\n  }, children), __jsx(\"div\", {\n    className: styles.footer\n  }, __jsx(\"div\", {\n    className: styles.row\n  }, __jsx(\"div\", {\n    className: styles.tagContainer\n  }, tags === null || tags === void 0 ? void 0 : tags.map(tag => __jsx(Tag, {\n    key: tag\n  }, tag))), __jsx(\"div\", {\n    className: styles.userDetails\n  }, __jsx(Link, {\n    href: \"/users/[user]\",\n    as: `/users/${author.username}`\n  }, __jsx(\"a\", null, __jsx(\"img\", {\n    src: `https://secure.gravatar.com/avatar/${author.id}?s=32&d=identicon`,\n    alt: author.username\n  }))), __jsx(\"div\", {\n    className: styles.info\n  }, __jsx(\"span\", null, tags ? 'asked' : 'answered', ' ', formatDistanceToNowStrict(new Date(created), {\n    addSuffix: true\n  })), __jsx(Link, {\n    href: \"/users/[user]\",\n    as: `/users/${author.username}`\n  }, __jsx(\"a\", null, author.username))))), (((_authState$userInfo = authState.userInfo) === null || _authState$userInfo === void 0 ? void 0 : _authState$userInfo.id) === author.id || isAdmin()) && __jsx(\"div\", {\n    className: styles.row\n  }, __jsx(\"a\", {\n    className: styles.delete,\n    onClick: () => handleDeleteComment()\n  }, \"delete\"))));\n};\n\nexport default PostSummary;","map":null,"metadata":{},"sourceType":"module"}