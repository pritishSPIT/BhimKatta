{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport Head from 'next/head';\nimport { publicFetch } from '../../util/fetcher';\nimport Layout from '../../components/layout';\nimport UserCard from '../../components/user-card';\nimport AvatarCard from '../../components/user-card/avatar-card';\nimport PostList from '../../components/user-card/post-list';\nimport PostItem from '../../components/user-card/post-list/post-item';\nimport { Spinner } from '../../components/icons';\n\nconst UserDetail = ({\n  username\n}) => {\n  const {\n    0: posts,\n    1: setPosts\n  } = useState(null);\n  const {\n    0: postType,\n    1: setPostType\n  } = useState('Questions');\n  useEffect(() => {\n    const fetchQuestions = async () => {\n      const {\n        data\n      } = await publicFetch.get(`/question/user/${username}`);\n      setPosts(data);\n    };\n\n    fetchQuestions();\n  }, [postType, username]);\n  return __jsx(Layout, {\n    extra: false\n  }, __jsx(Head, null, __jsx(\"title\", null, \"Users \", username, \" - BhimKatta\")), __jsx(UserCard, null, __jsx(AvatarCard, {\n    username: username\n  }), __jsx(PostList, {\n    postType: postType,\n    setPostType: setPostType\n  }, !posts && __jsx(\"div\", {\n    className: \"loading\"\n  }, __jsx(Spinner, null)), posts === null || posts === void 0 ? void 0 : posts.map(({\n    id,\n    title,\n    score,\n    created\n  }) => __jsx(PostItem, {\n    key: id,\n    title: title,\n    vote: score,\n    created: created,\n    id: id\n  })), (posts === null || posts === void 0 ? void 0 : posts.length) == 0 && __jsx(\"p\", {\n    className: \"not-found-questions\"\n  }, \"Don't have any questions yet.\"))));\n};\n\nexport async function getServerSideProps(context) {\n  const username = context.params.username;\n  return {\n    props: {\n      username\n    }\n  };\n}\nexport default UserDetail;","map":null,"metadata":{},"sourceType":"module"}